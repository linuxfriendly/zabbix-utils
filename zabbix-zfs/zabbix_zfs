#!/bin/bash
#
# Push zfs information to zabbix
#
# Arguments: hostname as defined in zabbix

BUFFER=/tmp/zabbix-zfs
STATS=$BUFFER/stats

action=$1
pool=$2

case $action in
"getdata")
! test -d $BUFFER && mkdir $BUFFER
(
# ARC statistics
awk '
{ if (NR>2) printf("zfs.arc.%s %d\n",$1,$3); }
' /proc/spl/kstat/zfs/arcstats
# ZIL statistics
awk '
{ if (NR>2) printf("zfs.zil.%s %d\n",$1,$3); }
' /proc/spl/kstat/zfs/zil
# Pool statistics
( for pool in $( ls -d /proc/spl/kstat/zfs/*/ 2> /dev/null)
do
   pool=${pool/*kstat\/zfs\//}
   pool=${pool/\//}
   awk -v pool=$pool '
   { if (NR==2) {
        for (i=1; i<=NF; i++)
           name[i]=$i;
     } 
     if (NR==3) 
        for (i=1; i<=NF; i++)
           printf("zfs.pool.%s.%s %d\n",name[i], pool, $i);
   }' /proc/spl/kstat/zfs/$pool/io 
done )
) > $STATS
;;
"zfs.pool.discover")
# Discover pools
(
printf '{   "data":[' $host
pools=0
for pool in $( ls -d /proc/spl/kstat/zfs/*/ 2> /dev/null)
do
   pool=${pool/*kstat\/zfs\//}
   pool=${pool/\//}
   test $pools -eq 0 && pools=1 || printf ','
   printf '   {      "{#ZFS_POOLNAME}":"%s"   }' $pool
done
printf '   ]}'
)
;;
zfs.pool.master)
grep ".$pool " $STATS
;;
zfs.pool.*)
data=$(grep "^$action.$pool" $STATS)
data=${data/* /}
echo $data
;;
zfs.zil)
grep "^zfs.zil" $STATS
;;
zfs.arc)
grep "^zfs.arc" $STATS
;;
zfs.arc.*)
data=$(grep "^$action" $STATS)
data=${data/* /}
echo "$action $data" >> $BUFFER/log
echo $data
;;
esac
